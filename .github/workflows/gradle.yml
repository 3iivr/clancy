# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 13

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Docker Login on DockerHub
      run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}

    - name: Docker Publish on DockerHub
      run: ./gradlew dockerPushDockerHub

    - name: Docker pull published image
      run: docker pull evelynvieira/discordjavabot:0.0.1-SNAPSHOT

    - name: Docker Login on Heroku
      run: docker login --username=_ --password=${{ secrets.HEROKU_KEY }} registry.heroku.com

    - name: Docker tag on Heroku
      run: docker tag evelynvieira/discordjavabot:0.0.1-SNAPSHOT registry.heroku.com/doze-bot/worker

    - name: Docker push on Heroku
      run: docker push registry.heroku.com/doze-bot/worker
      
    - name: Heroku auth file
      run: echo "${{ secrets.HEROKU_AUTH }}" > ~/.netrc

    - name: Heroku container login
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_KEY }}
      run: heroku container:login

    - name: Heroku container release
      run: heroku container:release worker -a doze-bot
